// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package rpc_auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// 分配标识号
//
// 每个字段都有唯一一个数字标识符,这些标识符一旦定了,就不能修改. 代表二进制消息中各个字段的位置
//
// [1,15]标识符编码时占一个字节 [16,2047]占两个字节
type LoginRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	UserPassword         string   `protobuf:"bytes,2,opt,name=userPassword,proto3" json:"userPassword,omitempty"`
	AppId                string   `protobuf:"bytes,3,opt,name=appId,proto3" json:"appId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_7246f1a83df80702, []int{0}
}
func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (dst *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(dst, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *LoginRequest) GetUserPassword() string {
	if m != nil {
		return m.UserPassword
	}
	return ""
}

func (m *LoginRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

type Token struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_7246f1a83df80702, []int{1}
}
func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (dst *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(dst, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// 使用 repeated 代表可重复,通常作为数组使用
type User struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age                  int32    `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	Friends              []string `protobuf:"bytes,3,rep,name=friends,proto3" json:"friends,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_7246f1a83df80702, []int{2}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *User) GetFriends() []string {
	if m != nil {
		return m.Friends
	}
	return nil
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "LoginRequest")
	proto.RegisterType((*Token)(nil), "Token")
	proto.RegisterType((*User)(nil), "User")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Token, error)
	GetUserInfo(ctx context.Context, in *Token, opts ...grpc.CallOption) (*User, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/Auth/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) GetUserInfo(ctx context.Context, in *Token, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/Auth/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	Login(context.Context, *LoginRequest) (*Token, error)
	GetUserInfo(context.Context, *Token) (*User, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).GetUserInfo(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Auth_Login_Handler,
		},
		{
			MethodName: "GetUserInfo",
			Handler:    _Auth_GetUserInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_auth_7246f1a83df80702) }

var fileDescriptor_auth_7246f1a83df80702 = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x4b, 0x4b, 0x03, 0x31,
	0x14, 0x85, 0xa9, 0x33, 0xa9, 0xed, 0xb5, 0x82, 0x5c, 0x5c, 0x84, 0x41, 0xa5, 0x64, 0xd5, 0x55,
	0x16, 0xfa, 0x0b, 0x14, 0x51, 0x0a, 0x22, 0x12, 0x74, 0xe3, 0x46, 0xa2, 0xb9, 0x7d, 0x20, 0x26,
	0x31, 0x0f, 0xfc, 0xfb, 0x92, 0xcc, 0xf8, 0xe8, 0xee, 0x7c, 0xe7, 0x40, 0x4e, 0xee, 0x01, 0xd0,
	0x39, 0x6d, 0xa4, 0x0f, 0x2e, 0x39, 0x61, 0x60, 0x76, 0xe7, 0xd6, 0x5b, 0xab, 0xe8, 0x33, 0x53,
	0x4c, 0xd8, 0xc1, 0x24, 0x47, 0x0a, 0xf7, 0xfa, 0x83, 0xf8, 0x68, 0x3e, 0x5a, 0x4c, 0xd5, 0x2f,
	0xa3, 0x80, 0x59, 0xd1, 0x0f, 0x3a, 0xc6, 0x2f, 0x17, 0x0c, 0xdf, 0xab, 0xf9, 0x8e, 0x87, 0xc7,
	0xc0, 0xb4, 0xf7, 0x4b, 0xc3, 0x9b, 0x1a, 0xf6, 0x20, 0x4e, 0x81, 0x3d, 0xba, 0x77, 0xb2, 0x25,
	0x4e, 0x45, 0x0c, 0x6f, 0xf7, 0x20, 0x6e, 0xa0, 0x7d, 0x8a, 0x14, 0x10, 0xa1, 0xb5, 0x7f, 0xc5,
	0x55, 0xe3, 0x11, 0x34, 0x7a, 0x4d, 0xb5, 0x8b, 0xa9, 0x22, 0x91, 0xc3, 0xfe, 0x2a, 0x6c, 0xc9,
	0x9a, 0xc8, 0x9b, 0x79, 0xb3, 0x98, 0xaa, 0x1f, 0x3c, 0xbf, 0x86, 0xf6, 0x32, 0xa7, 0x0d, 0x9e,
	0x01, 0xab, 0x47, 0xe1, 0xa1, 0xfc, 0x7f, 0x5c, 0x37, 0x96, 0xfd, 0x2f, 0x4e, 0xe0, 0xe0, 0x96,
	0x52, 0xa9, 0x5c, 0xda, 0x95, 0xc3, 0xc1, 0xee, 0x98, 0x2c, 0xd6, 0x15, 0x3c, 0x4f, 0x82, 0x7f,
	0x7b, 0x29, 0x23, 0xbd, 0x8e, 0xeb, 0x4a, 0x17, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x2a,
	0x45, 0x00, 0x33, 0x01, 0x00, 0x00,
}
